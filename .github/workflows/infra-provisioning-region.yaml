name: Infrastructure Terraform Specific Region

on:
  workflow_dispatch:
    inputs:
      account:
        description: 'Select AWS Account'
        required: true
        type: choice
        default: '019273956931'
        options:
          - '019273956931'
      region:
        description: 'Select AWS Region'
        required: true
        type: choice
        default: 'us-east-1: N. Virginia'
        options:
          - 'us-east-1: N. Virginia'
          - 'us-east-2: Ohio'
      environment:
        description: 'Select Environment'
        required: true
        type: choice
        default: prod
        options:
          - prod
          - dev

jobs:
  SetRegion:
    runs-on: ubuntu-latest
    outputs:
      region_code: ${{ steps.set_region.outputs.region_code }}
    steps:
      - name: Set Region
        id: set_region
        run: |
          SELECTED_REGION="${{ inputs.region }}"
          echo "region_code=${SELECTED_REGION%%:*}" >> $GITHUB_OUTPUT

  Terraform:
    runs-on: ubuntu-latest
    needs:
      - SetRegion
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      OUTPUTS_ARTIFACT_NAME: ${{ inputs.environment }}-aux-infra-tf-outputs.json
    defaults:
      run:
        working-directory: ./terraform
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.2

      - name: Set Telegram Token
        run: |
          if [ "${{ inputs.environment }}" == "prod" ]; then
            echo "TELEGRAM_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN_PROD }}" >> $GITHUB_ENV
          elif [ "${{ inputs.environment }}" == "dev" ]; then
            echo "TELEGRAM_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN_DEV }}" >> $GITHUB_ENV
          fi

      - name: Terraform init
        run: terraform init

      - name: Terraform workspace select
        run: terraform workspace select aux-infra-${{ inputs.environment }} || terraform workspace new aux-infra-${{ inputs.environment }}

      - name: Terraform validate
        run: terraform validate

      # - name: Unlock Terraform
      #   run: terraform force-unlock -force a3be03e3-b1d3-1ea3-31da-5e8fab8e958d

      - name: Terraform plan
        run: |
          terraform plan \
            -var-file=${{ inputs.environment }}.tfvars \
            -var "env=${{ inputs.environment }}" \
            -var "region=${{ needs.SetRegion.outputs.region_code }}" \
            -var "telegram_token_value=${{ env.TELEGRAM_TOKEN }}" \
            -out ${{ inputs.environment }}.tfplan

      - name: Provision infrastructure
        run: terraform apply -auto-approve ${{ inputs.environment }}.tfplan

      - name: Get terraform output
        id: output
        run: |
          terraform output -json > ${{ github.workspace }}/${{ env.OUTPUTS_ARTIFACT_NAME }}

      - name: Upload terraform outputs as artifact
        uses: actions/upload-artifact@v4
        with:
          name: "${{ env.OUTPUTS_ARTIFACT_NAME }}"
          path: "${{ github.workspace }}/${{ env.OUTPUTS_ARTIFACT_NAME }}"
          retention-days: 5
